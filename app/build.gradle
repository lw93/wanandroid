apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao'
android {
    compileSdkVersion 27
    buildToolsVersion '27.0.3'
    defaultConfig {
        applicationId "com.xygit.note.notebook"
        minSdkVersion 16
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        flavorDimensions "default"
        resConfigs "zh-rCN", "xhdpi"
        ndk {
            abiFilters "armeabi"
        }
        externalNativeBuild {
            cmake {
                // Sets optional flags for the C compiler.
                cFlags ""
                // Sets a flag to enable format macro constants for the C++ compiler.
                cppFlags ""
                //指定需要编译的cpu架构
                abiFilters "armeabi"
                //这里指定只编译 native-lib 模块
                targets "native-debug"
            }
        }
    }
    signingConfigs {
        base {
            storeFile file(BASE_STORE_FILE)
            keyAlias BASE_KEY_ALIAS
            keyPassword BASE_KEY_PASSWORD
            storePassword BASE_STORE_PASSWORD
            v1SigningEnabled true
            v2SigningEnabled true
        }
        special {
            storeFile file(SPECIAL_STORE_FILE)
            keyAlias SPECIAL_KEY_ALIAS
            keyPassword SPECIAL_KEY_PASSWORD
            storePassword SPECIAL_STORE_PASSWORD
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }

    /*
    以下一般为默认属性即可:
    debuggable: debug模式默认为true, release模式默认是false

    jniDebuggable: debug模式与release模式默认都是false

    renderscriptDebuggable: debug模式与release模式默认都是false
    */

    buildTypes {
        def ROOT_PATH = "notebook"
        def FILE_PATH = "${ROOT_PATH}/file"
        def CACHE_PATH = "${ROOT_PATH}/cache"

        debug {
            debuggable true
            jniDebuggable true
            minifyEnabled false
            shrinkResources false
            multiDexEnabled false
            // 开启ZipAlign优化
            zipAlignEnabled false
            aaptOptions {
                cruncherEnabled false
            }
            externalNativeBuild {
                cmake {
                    // Sets optional flags for the C compiler.
                    cFlags "-DDebug"
                    // Sets a flag to enable format macro constants for the C++ compiler.
                    cppFlags "-DDebug"
                }
            }
            resValue "string", "app_name", "安卓笔记-测试版"
            manifestPlaceholders = [ROOT_PATH: "\"${ROOT_PATH}\""]
            buildConfigField "String", "ROOT_PATH", "\"${ROOT_PATH}\""
            buildConfigField "String", "FILE_PATH", "\"${FILE_PATH}\""
            buildConfigField "String", "CACHE_PATH", "\"${CACHE_PATH}\""
        }
        release {
            debuggable false
            jniDebuggable false
            minifyEnabled true
            shrinkResources true
            multiDexEnabled true
            // 开启ZipAlign优化
            zipAlignEnabled true
            signingConfig signingConfigs.base
            aaptOptions {
                cruncherEnabled true
            }
            externalNativeBuild {
                cmake {
                    // Sets optional flags for the C compiler.
                    cFlags "-DDebug"
                    // Sets a flag to enable format macro constants for the C++ compiler.
                    cppFlags "-DDebug"
                }
            }
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            manifestPlaceholders = [ROOT_PATH: "\"${ROOT_PATH}\""]
            resValue "string", "app_name", "安卓笔记"
            buildConfigField "String", "ROOT_PATH", "\"${ROOT_PATH}\""
            buildConfigField "String", "FILE_PATH", "\"${FILE_PATH}\""
            buildConfigField "String", "CACHE_PATH", "\"${CACHE_PATH}\""
        }
    }

    productFlavors {
        xygit {
            applicationId "com.geek.note.notebook"
            manifestPlaceholders = [
                    AMAP_KEY          : AMAP_KEY,
                    BUGLY_APPID       : BUGLY_APPID,
                    BUGLY_APP_CHANNEL : "dev",
                    BUGLY_ENABLE_DEBUG: true,
                    HOTFIX_APPID      : HOTFIX_APPID,
                    HOTFIX_APPSECRET  : HOTFIX_APPSECRET,
                    HOTFIX_RSASECRET  : HOTFIX_RSASECRET
            ]
            signingConfig signingConfigs.special
        }
        xiaomi {
            applicationId "com.xy.personal.notebook"
            manifestPlaceholders = [
                    AMAP_KEY          : AMAP_KEY,
                    BUGLY_APPID       : BUGLY_APPID,
                    BUGLY_APP_CHANNEL : "dev",
                    BUGLY_ENABLE_DEBUG: true,
                    HOTFIX_APPID      : HOTFIX_APPID,
                    HOTFIX_APPSECRET  : HOTFIX_APPSECRET,
                    HOTFIX_RSASECRET  : HOTFIX_RSASECRET
            ]
            signingConfig signingConfigs.special
        }
    }

    // 配置GreenDao基本参数
    greendao {
        schemaVersion 1 //当前数据库版本
        daoPackage 'com.xygit.note.notebook.greendao'
        targetGenDir 'src/main/java'
    }

    //配置各种目录
    sourceSets {
        //主要
        main {
//            manifest.srcFile 'AndroidManifest.xml'
//            java.srcDirs = ['src']
//            resources.srcDirs = ['src']
//            aidl.srcDirs = ['src']
//            renderscript.srcDirs = ['src']
//            res.srcDirs = ['res']
//            assets.srcDirs = ['assets']
            jni.srcDirs = []
            jniLibs.srcDirs = ['libs']
        }

        //测试资源路径
//        instrumentTest.setRoot('tests')
//        debug.setRoot('build-types/debug')
//        release.setRoot('build-types/release')
    }


    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }


    applicationVariants.all { variant ->

        if (variant.getName().contains("Debug")) {
            buildConfigField "String", "AD_APP_ID", "\"2882303761517411490\""
        } else {
            buildConfigField "String", "AD_APP_ID", "\"2882303761518009814\""
        }
        variant.outputs.all {
            if (variant.getName().contains("Debug") || variant.getName().contains("Test")) {
                if (outputFileName.endsWith(".apk")) {
                    outputFileName = "${variant.flavorName}_${variant.versionName}_测试.apk"
                }
                return
            }
            if (outputFileName.endsWith(".apk")) {
                if ("" != variant.flavorName) {
                    outputFileName = "${variant.flavorName}_${variant.versionName}.apk"
                    return
                }
                outputFileName = "app_${variant.versionName}.apk"
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    packagingOptions {
        exclude 'META-INF/license.txt'
    }
    lintOptions {
        abortOnError false
    }

    dexOptions {
        //preDexLibraries true
        dexInProcess = false
        javaMaxHeapSize "3g"
    }
    //临时禁用严格图片检查
//    aaptOptions.cruncherEnabled = false
    aaptOptions.useNewCruncher = false
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.android.support:cardview-v7:27.1.1'
    implementation 'com.android.support:recyclerview-v7:27.1.1'
    implementation 'com.android.support:design:27.1.1'
    implementation 'com.android.support:support-v4:27.1.1'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
//    implementation 'com.squareup.okhttp3:okhttp:3.11.0'
    implementation 'io.reactivex:rxandroid:1.2.1'
    implementation 'com.squareup.retrofit2:converter-gson:2.1.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava:2.1.0'

    implementation 'com.github.bumptech.glide:glide:3.7.0'

    implementation 'org.greenrobot:eventbus:3.0.0'

    implementation 'com.github.chrisbanes:PhotoView:2.0.0'

    implementation 'com.github.lzyzsd:jsbridge:1.0.4'

    implementation 'com.willowtreeapps.spruce:spruce-android:1.0.1'

    //高德
    implementation 'com.amap.api:map2d:5.2.0'
    implementation 'com.amap.api:location:4.1.0'
    implementation 'com.amap.api:search:6.1.0'

    implementation 'org.greenrobot:greendao:3.2.2'

    implementation 'com.tencent.bugly:crashreport:2.8.6'

    implementation 'com.taobao.android:alisdk-hotfix:2.0.9'

    implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.0-alpha-21'

    implementation 'com.youth.banner:banner:1.4.10'
    //chrome 调试
    implementation 'com.facebook.stetho:stetho:1.3.1'
    implementation 'com.facebook.stetho:stetho-okhttp3:1.3.1'

    //学习使用
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.30'
//    implementation('com.aliyun.ams:alicloud-android-hotfix:3.2.8') {
//        exclude(module: 'alicloud-android-utdid')
//    }

    implementation 'com.hyman:flowlayout-lib:1.1.2'

    implementation 'de.hdodenhof:circleimageview:3.0.0'

}
